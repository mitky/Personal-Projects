

import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mmiit
 */
public class mainForm extends javax.swing.JFrame {

    //array list for dispaling the chart
    ArrayList<String> project = new ArrayList<String>();
    ArrayList<Integer> money = new ArrayList<Integer>();
     ArrayList<String> project1 = new ArrayList<String>();
    ArrayList<Integer> money1 = new ArrayList<Integer>();
    
    
    public mainForm() throws FileNotFoundException, IOException , InterruptedException, InvocationTargetException{
        initComponents();
        
        
        
           
        
       
        //load xlsx file 
        FileInputStream file = new FileInputStream("C:\\Users\\mmiit\\Desktop\\New folder\\cordis-h2020projects.xlsx");
        
       
        
        //loop trough first 10 excel rows and add the cell value in arreyList
            XSSFWorkbook wb = new XSSFWorkbook(file);
        XSSFSheet sheet = wb.getSheetAt(0);
        DataFormatter dataFormatter = new DataFormatter();
        Iterator<Row> rowItr = sheet.rowIterator();
        
        
            for(int i =1;i<=11;i++){
                
                String project = readStringCell(i,2);
                int money = readNumericCell(i,13);
                System.out.println(project + " " + money);
                money1.add(money);
                project1.add(project);
                
            }
        
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    //function to read String cells from the exel file
    private String readStringCell(int Row, int Column) throws FileNotFoundException, IOException{
      String value = null;
     Workbook wb = null;
     
     try{
         FileInputStream file = new FileInputStream("C:\\Users\\mmiit\\Desktop\\New folder\\cordis-h2020projects.xlsx");
         wb = new XSSFWorkbook(file);
     }
     catch(FileNotFoundException e){
         e.printStackTrace();
     }
     catch(IOException e1){
         e1.printStackTrace();
     }
     Sheet sheet = wb.getSheetAt(0);
     Row row = sheet.getRow(Row);
     Cell cell = row.getCell(Column);
     value = cell.getStringCellValue();
        
        return value;
    }
    
    //function to read numeric cells from the exel file
    private int readNumericCell(int Row, int Column) throws FileNotFoundException, IOException{
     int value = 0;
     Workbook wb = null;
     
     try{
         FileInputStream file = new FileInputStream("C:\\Users\\mmiit\\Desktop\\New folder\\cordis-h2020projects.xlsx");
         wb = new XSSFWorkbook(file);
     }
     catch(FileNotFoundException e){
         e.printStackTrace();
     }
     catch(IOException e1){
         e1.printStackTrace();
     }
     Sheet sheet = wb.getSheetAt(0);
     Row row = sheet.getRow(Row);
     Cell cell = row.getCell(Column);
     value = (int) cell.getNumericCellValue();
        
        return value;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("chart");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(969, 969, 969)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(230, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
   
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            
       //chart
        
     DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
     
     
     
     
        //display the chart
        for(int i =0; i < project1.size(); i++){
             barChartData.setValue(money1.get(i), "money", project1.get(i));
        }
        
        JFreeChart barChart = ChartFactory.createBarChart("finance", "project", "money", barChartData, PlotOrientation.VERTICAL, false, true, true);
        CategoryPlot barchart = barChart.getCategoryPlot();
        barchart.setRangeGridlinePaint(Color.ORANGE);
        
        ChartFrame frame = new ChartFrame("a" , barChart);
        frame.setVisible(true);
        frame.setSize(450, 350);
        
        
        
         
           
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new mainForm().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(mainForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(mainForm.class.getName()).log(Level.SEVERE, null, ex);
               
                } catch (InterruptedException ex) {
                    Logger.getLogger(mainForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InvocationTargetException ex) {
                    Logger.getLogger(mainForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
